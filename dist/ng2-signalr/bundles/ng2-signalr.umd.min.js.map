{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-signalr/lib/services/eventing/broadcast.event.listener.ts","ng://ng2-signalr/lib/services/testing/signalr.connection.mock.ts","ng://ng2-signalr/lib/services/testing/signalr.connection.mock.manager.ts","ng://ng2-signalr/lib/services/connection/connection.status.ts","ng://ng2-signalr/lib/services/connection/connection.statuses.ts","ng://ng2-signalr/lib/services/connection/signalr.connection.ts","ng://ng2-signalr/lib/services/connection/connection.transport.ts","ng://ng2-signalr/lib/services/connection/connection.transports.ts","ng://ng2-signalr/lib/services/signalr.configuration.ts","ng://ng2-signalr/lib/services/signalr.module.ts","ng://ng2-signalr/lib/services/signalr.ts","ng://ng2-signalr/lib/modules/signalr-module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","BroadcastEventListener","event","_this","_super","this","Error","__","constructor","prototype","create","tslib_1.__extends","Subject","SignalRConnectionMock","_mockErrors$","_mockStatus$","_listeners","defineProperty","asObservable","stop","start","Promise","resolve","invoke","method","parameters","_i","listen","listener","listenFor","listenForRaw","SignalRConnectionMockManager","_errors$","_status$","_object","ConnectionStatus","_value","names","Number","toString","name","equals","other","ConnectionStatuses","statuses","SignalRConnection","jConnection","jProxy","zone","configuration","_jProxy","_jConnection","_zone","_errors","wireUpErrorsAsObservable","_status","wireUpStatusEventsAsObservable","_configuration","jTransports","convertTransports","transport","reject","jsonp","pingInterval","withCredentials","console","log","id","fail","message","$promise","_a","apply","result","err","setListener","args","run","casted","executeEventsInZone","stopListening","_b","tslib_1.__values","_c","callback","off","on","transports","map","t","sError","executeErrorsInZone","sStatus","stateChanged","change","newState","executeStatusChangeInZone","onBroadcastEventReceived","logging","join","func","inZone","runOutsideAngular","ConnectionTransport","_name","ConnectionTransports","SignalRConfiguration","hubName","qs","url","auto","SIGNALR_JCONNECTION_TOKEN","InjectionToken","SignalR","jHubConnectionFn","_jHubConnectionFn","createConnection","options","merge","logConfiguration","createHubProxy","connect","serializedQs","JSON","stringify","serializedTransport","overrides","merged","Injectable","NgZone","Inject","SIGNALR_CONFIGURATION","createSignalr","jConnectionFn","hubConnectionFn","hubConnection","getJConnectionFn","SignalRModule","forRoot","getSignalRConfiguration","ngModule","providers","provide","useFactory","deps","forChild","NgModule","useValue","Éµ0"],"mappings":"mXAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAmGrB,SAASO,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,GACjC,QACQ,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,GAE1D,QAAkB,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,ECzIX,kBAEI,SAAAU,EAAmBC,GAAnB,IAAAC,EACIC,EAAAd,KAAAe,OAAOA,KACP,GAFeF,EAAAD,MAAAA,EAEF,MAATA,GAA2B,KAAVA,EACjB,MAAM,IAAII,MAAM,uFAG5B,ODaO,SAAmBjC,EAAGC,GAEzB,SAASiC,IAAOF,KAAKG,YAAcnC,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEoC,UAAkB,OAANnC,EAAaC,OAAOmC,OAAOpC,IAAMiC,EAAGE,UAAYnC,EAAEmC,UAAW,IAAIF,GCxBpCI,CAAAA,EAAAA,GAQ/CV,GAR+CW,EAAAA,SCA/CC,EAAA,WASI,SAAAA,EACYC,EACAC,EACAC,GAFAX,KAAAS,aAAAA,EACAT,KAAAU,aAAAA,EACAV,KAAAW,WAAAA,EA0ChB,OAvCIzC,OAAA0C,eAAIJ,EAAAJ,UAAA,SAAM,KAAV,WACI,OAAOJ,KAAKS,8CAGhBvC,OAAA0C,eAAIJ,EAAAJ,UAAA,SAAM,KAAV,WACI,OAAOJ,KAAKU,aAAaG,gDAG7B3C,OAAA0C,eAAIJ,EAAAJ,UAAA,KAAE,KAAN,WACI,MAAO,gEAGJI,EAAAJ,UAAAU,KAAP,aAION,EAAAJ,UAAAW,MAAP,WACI,OAAOC,QAAQC,QAAQ,OAGpBT,EAAAJ,UAAAc,OAAP,SAAcC,OAAgB,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAD,EAAAC,EAAA,GAAA5B,UAAA4B,GAC1B,OAAOL,QAAQC,QAAQ,OAGpBT,EAAAJ,UAAAkB,OAAP,SAAiBC,GACbvB,KAAKW,WAAWY,EAAS1B,OAAS0B,GAG/Bf,EAAAJ,UAAAoB,UAAP,SAAoB3B,OACV0B,EAAW,IAAI3B,EAA0BC,GAE/C,OADAG,KAAKsB,OAAOC,GACLA,GAGJf,EAAAJ,UAAAqB,aAAP,SAAoB5B,OACV0B,EAAW,IAAI3B,EAA8BC,GAEnD,OADAG,KAAKW,WAAWY,EAAS1B,OAAS0B,EAC3BA,GAEff,EAtDA,GCFAkB,EAAA,WAWI,SAAAA,IACI1B,KAAK2B,SAAW,IAAIpB,EAAAA,QACpBP,KAAK4B,SAAW,IAAIrB,EAAAA,QACpBP,KAAKW,WAAa,GAClBX,KAAK6B,QAAU,IAAIrB,EAAsBR,KAAK2B,SAAU3B,KAAK4B,SAAU5B,KAAKW,YAkBpF,OAfIzC,OAAA0C,eAAIc,EAAAtB,UAAA,OAAI,KAAR,WACI,OAAOJ,KAAK6B,yCAGhB3D,OAAA0C,eAAIc,EAAAtB,UAAA,UAAO,KAAX,WACI,OAAOJ,KAAK2B,0CAGhBzD,OAAA0C,eAAIc,EAAAtB,UAAA,UAAO,KAAX,WACI,OAAOJ,KAAK4B,0CAGhB1D,OAAA0C,eAAIc,EAAAtB,UAAA,YAAS,KAAb,WACI,OAAOJ,KAAKW,4CAEpBe,EAjCA,GCAAI,EAAA,WAcI,SAAAA,EAAYxC,GACR,GAAa,MAATA,GAAiBA,EAAQ,EACzB,MAAM,IAAIW,MAAM,gFAEpBD,KAAK+B,OAASzC,EAatB,OAzBIpB,OAAA0C,eAAIkB,EAAA1B,UAAA,QAAK,KAAT,WACI,OAAOJ,KAAK+B,wCAGf7D,OAAA0C,eAAIkB,EAAA1B,UAAA,OAAI,KAAR,WACG,OAAO0B,EAAiBE,MAAMC,OAAOjC,KAAK+B,OAAOG,8CAU9CJ,EAAA1B,UAAA8B,SAAP,WACI,OAAOlC,KAAKmC,MAGTL,EAAA1B,UAAAgC,OAAP,SAAcC,GACV,OAAa,MAATA,GAGGrC,KAAK+B,SAAWM,EAAM/C,OA3BlBwC,EAAAE,MAAkB,CAAC,aAAc,YAAa,eAAgB,GAAI,gBA6BrFF,EA/BA,GCGAQ,EAAA,WAAA,SAAAA,KAyBA,OAfIpE,OAAA0C,eAAkB0B,EAAA,aAAU,KAA5B,WACI,OAAOA,EAAmBC,SAAS,oCAGvCrE,OAAA0C,eAAkB0B,EAAA,YAAS,KAA3B,WACI,OAAOA,EAAmBC,SAAS,oCAGvCrE,OAAA0C,eAAkB0B,EAAA,eAAY,KAA9B,WACI,OAAOA,EAAmBC,SAAS,oCAGvCrE,OAAA0C,eAAkB0B,EAAA,eAAY,KAA9B,WACI,OAAOA,EAAmBC,SAAS,oCArBxBD,EAAAC,SACX,CACI,IAAIT,EAAiB,GACrB,IAAIA,EAAiB,GACrB,IAAIA,EAAiB,GACrB,IAAIA,EAAiB,IAkBjCQ,EAzBA,gBCgBI,SAAAE,EAAYC,EAAkBC,EAAaC,EAAcC,GACrD5C,KAAK6C,QAAUH,EACf1C,KAAK8C,aAAeL,EACpBzC,KAAK+C,MAAQJ,EACb3C,KAAKgD,QAAUhD,KAAKiD,2BACpBjD,KAAKkD,QAAUlD,KAAKmD,iCACpBnD,KAAKoD,eAAiBR,EACtB5C,KAAKW,WAAa,GA6M1B,OA1MIzC,OAAA0C,eAAW4B,EAAApC,UAAA,SAAM,KAAjB,WACI,OAAOJ,KAAKgD,yCAGhB9E,OAAA0C,eAAW4B,EAAApC,UAAA,SAAM,KAAjB,WACI,OAAOJ,KAAKkD,yCAGTV,EAAApC,UAAAW,MAAP,WAAA,IAAAjB,EAAAE,KAEUqD,EAAcrD,KAAKsD,kBAAkBtD,KAAKoD,eAAeG,WAoB/D,OAlBiB,IAAIvC,QAAO,SAAsBC,EAASuC,GACvD1D,EAAKgD,aACA/B,MAAM,CACH0C,MAAO3D,EAAKsD,eAAeK,MAC3BC,aAAc5D,EAAKsD,eAAeM,aAClCH,UAAWF,EACXM,gBAAiB7D,EAAKsD,eAAeO,kBAExCvE,KAAI,WACDwE,QAAQC,IAAI,+BAAiC/D,EAAKgD,aAAagB,IAC/DF,QAAQC,IAAI,sCAAwC/D,EAAKgD,aAAaS,UAAUpB,MAChFlB,EAAQnB,KAEXiE,KAAI,SAAExE,GACHqE,QAAQC,IAAI,qBACZL,EAAO,6BAA+BjE,EAAMyE,cAMrDxB,EAAApC,UAAAU,KAAP,WACId,KAAK8C,aAAahC,QAGtB5C,OAAA0C,eAAW4B,EAAApC,UAAA,KAAE,KAAb,WACI,OAAOJ,KAAK8C,aAAagB,oCAGtBtB,EAAApC,UAAAc,OAAP,SAAcC,OAAd,IAAArB,EAAAE,KAA8BoB,EAAA,GAAAC,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAD,EAAAC,EAAA,GAAA5B,UAAA4B,GAC1B,GAAc,MAAVF,EACA,MAAM,IAAIlB,MAAM,0EAEpBD,KAAK6D,IAAI,sCAAuC1C,EAAM,YAEhD8C,EAAW,IAAIjD,QAAO,SAAOC,EAASuC,UACxCU,EAAApE,EAAK+C,SAAQ3B,OAAMiD,MAAAD,EAAA1E,EAAA,CAAC2B,GAAWC,IAC1BhC,KAAI,SAAEgF,GACHtE,EAAK+D,IAAI,IAAK1C,EAAM,+CACpBF,EAAQmD,GACRtE,EAAK+D,IAAI,uBAEZE,KAAI,SAAEM,GACHT,QAAQC,IAAI,aAAc1C,EAAM,kCAChCqC,EAAOa,GACPT,QAAQC,IAAI,yBAGxB,OAAOI,GAGJzB,EAAApC,UAAAkB,OAAP,SAAiBC,GAAjB,IAAAzB,EAAAE,KACI,GAAgB,MAAZuB,EACA,MAAM,IAAItB,MAAM,yDAepBD,KAAKsE,YAZS,eAAgB,IAAAC,EAAA,GAAAlD,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAkD,EAAAlD,GAAA5B,UAAA4B,GAC1BvB,EAAK0E,IAAG,eACAC,EAAY,KACZF,EAAK7E,OAAS,IACd+E,EAASF,EAAK,IAElBzE,EAAK+D,IAAI,mEACTtC,EAASpC,KAAKsF,GACd3E,EAAK+D,IAAI,4BACV/D,EAAKsD,eAAesB,sBAGAnD,IAGxBiB,EAAApC,UAAAuE,cAAP,SAAwBpD,WACpB,GAAgB,MAAZA,EACA,MAAM,IAAItB,MAAM,yDAGpBD,KAAK6D,IAAI,mEAAmEtC,EAAS1B,OAChFG,KAAKW,WAAWY,EAAS1B,SAC1BG,KAAKW,WAAWY,EAAS1B,OAAS,QAGtC,IAAuB,IAAA+E,ENdxB,SAAkBnG,GACrB,IAAIE,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UAAWG,EAAI,EAChE,OAAIL,EAAUA,EAAEM,KAAKR,GACd,CACHU,KAAM,WAEF,OADIV,GAAKO,GAAKP,EAAEiB,SAAQjB,OAAI,GACrB,CAAEa,MAAOb,GAAKA,EAAEO,KAAMI,MAAOX,KMQjBoG,CAAA7E,KAAKW,WAAWY,EAAS1B,QAAMiF,EAAAF,EAAAzF,QAAA2F,EAAA1F,KAAA0F,EAAAF,EAAAzF,OAAE,CAAnD,IAAM4F,EAAQD,EAAAxF,MACfU,KAAK6C,QAAQmC,IAAIzD,EAAS1B,MAAOkF,wGAGrC/E,KAAKW,WAAWY,EAAS1B,OAAS,IAG/B2C,EAAApC,UAAAoB,UAAP,SAAoB3B,GAChB,GAAa,MAATA,GAA2B,KAAVA,EACjB,MAAM,IAAII,MAAM,2DAGdsB,EAAW,IAAI3B,EAA0BC,GAI/C,OAFAG,KAAKsB,OAAOC,GAELA,GAGJiB,EAAApC,UAAAqB,aAAP,SAAoB5B,GAApB,IAAAC,EAAAE,KACI,GAAa,MAATH,GAA2B,KAAVA,EACjB,MAAM,IAAII,MAAM,2DAGdsB,EAAW,IAAI3B,EAA8BC,GAenD,OADAG,KAAKsE,YAZS,eAAgB,IAAAC,EAAA,GAAAlD,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAkD,EAAAlD,GAAA5B,UAAA4B,GAC1BvB,EAAK0E,IAAG,WAKJ1E,EAAK+D,IAAI,mEACTtC,EAASpC,KAAKoF,GACdzE,EAAK+D,IAAI,4BACV/D,EAAKsD,eAAesB,sBAGAnD,GACpBA,GAGHiB,EAAApC,UAAAkE,YAAR,SAAuBS,EAAsBxD,GACzCvB,KAAK6D,IAAI,mEAAmEtC,EAAS1B,OACrFG,KAAK6C,QAAQoC,GAAG1D,EAAS1B,MAAOkF,GAEO,MAAnC/E,KAAKW,WAAWY,EAAS1B,SACzBG,KAAKW,WAAWY,EAAS1B,OAAS,IAGtCG,KAAKW,WAAWY,EAAS1B,OAAOR,KAAK0F,IAGjCvC,EAAApC,UAAAkD,kBAAR,SAA0B4B,GACtB,OAAIA,aAAsB7G,MACf6G,EAAWC,IAAG,SAAEC,GAA2B,OAAAA,EAAEjD,OAEjD+C,EAAW/C,MAGdK,EAAApC,UAAA6C,yBAAR,WAAA,IAAAnD,EAAAE,KACUqF,EAAS,IAAI9E,EAAAA,QAKnB,OAHAP,KAAK8C,aAAavD,MAAK,SAAEA,GACrBO,EAAK0E,IAAG,WAAO,OAAAa,EAAOlG,KAAKI,IAAQO,EAAKsD,eAAekC,uBAEpDD,GAGH7C,EAAApC,UAAA+C,+BAAR,WAAA,IAAArD,EAAAE,KACUuF,EAAU,IAAIhF,EAAAA,QAOpB,OAJAP,KAAK8C,aAAa0C,aAAY,SAAEC,GAC5B3F,EAAK0E,IAAG,WAAO,OAAAe,EAAQpG,KAAK,IAAI2C,EAAiB2D,EAAOC,YACpD5F,EAAKsD,eAAeuC,6BAErBJ,EAAQ1E,gBAGX2B,EAAApC,UAAAwF,yBAAR,SAAoCrE,OAAqC,IAAAgD,EAAA,GAAAlD,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAkD,EAAAlD,EAAA,GAAA5B,UAAA4B,GACrErB,KAAK6D,IAAI,uEAELY,EAAY,KACZF,EAAK7E,OAAS,IACd+E,EAASF,EAAK,IAGlBvE,KAAKwE,IAAG,WACJjD,EAASpC,KAAKsF,IACfzE,KAAKoD,eAAesB,qBAEvB1E,KAAK6D,IAAI,4BAGLrB,EAAApC,UAAAyD,IAAR,eAAY,IAAAU,EAAA,GAAAlD,EAAA,EAAAA,EAAA5B,UAAAC,OAAA2B,IAAAkD,EAAAlD,GAAA5B,UAAA4B,IAC0B,IAA9BrB,KAAK8C,aAAa+C,SAGtBjC,QAAQC,IAAIU,EAAKuB,KAAK,QAGlBtD,EAAApC,UAAAoE,IAAR,SAAYuB,EAAkBC,GACtBA,EACAhG,KAAK+C,MAAMyB,IAAG,WAAO,OAAAuB,MAErB/F,KAAK+C,MAAMkD,kBAAiB,WAAO,OAAAF,OAG/CvD,KCvOA0D,EAAA,WAQI,SAAAA,EAAY/D,GACR,GAAY,MAARA,GAAyB,KAATA,EAChB,MAAM,IAAIlC,MAAM,mFAEpBD,KAAKmG,MAAQhE,EAcrB,OAtBIjE,OAAA0C,eAAIsF,EAAA9F,UAAA,OAAI,KAAR,WACI,OAAOJ,KAAKmG,uCAUTD,EAAA9F,UAAA8B,SAAP,WACI,OAAOlC,KAAKmG,OAGTD,EAAA9F,UAAAgC,OAAP,SAAcC,GACV,OAAa,MAATA,GAIGrC,KAAKmG,QAAU9D,EAAMF,MAEpC+D,EA1BA,GCGAE,EAAA,WAAA,SAAAA,KA8BA,OAnBIlI,OAAA0C,eAAkBwF,EAAA,eAAY,KAA9B,WACI,OAAOA,EAAqBlB,WAAW,oCAG3ChH,OAAA0C,eAAkBwF,EAAA,cAAW,KAA7B,WACI,OAAOA,EAAqBlB,WAAW,oCAG3ChH,OAAA0C,eAAkBwF,EAAA,mBAAgB,KAAlC,WACI,OAAOA,EAAqBlB,WAAW,oCAG3ChH,OAAA0C,eAAkBwF,EAAA,aAAU,KAA5B,WACI,OAAOA,EAAqBlB,WAAW,oCAG3ChH,OAAA0C,eAAkBwF,EAAA,OAAI,KAAtB,WACI,OAAOA,EAAqBlB,WAAW,oCA1B5BkB,EAAAlB,WACX,CACI,IAAIgB,EAAoB,gBACxB,IAAIA,EAAoB,eACxB,IAAIA,EAAoB,oBACxB,IAAIA,EAAoB,cACxB,IAAIA,EAAoB,SAsBpCE,EA9BA,GCFAC,EAuCI,WACGrG,KAAKsG,QAAU,KACftG,KAAK6F,SAAU,EACf7F,KAAKuG,GAAM,KACXvG,KAAKwG,IAAM,KACXxG,KAAKyD,OAAQ,EACbzD,KAAK2D,iBAAkB,EACvB3D,KAAKuD,UAAY6C,EAAqBK,KACtCzG,KAAK0E,qBAAsB,EAC3B1E,KAAKsF,qBAAsB,EAC3BtF,KAAK2F,2BAA4B,EACjC3F,KAAK0D,aAAe,KCjDdgD,EAA4B,IAAIC,EAAAA,eAAoB,6BCDjEC,EAAA,WAcI,SAAAA,EACIhE,EACAD,EACmCkE,GAEnC7G,KAAKoD,eAAiBR,EACtB5C,KAAK+C,MAAQJ,EACb3C,KAAK8G,kBAAoBD,EAyDjC,OAtDWD,EAAAxG,UAAA2G,iBAAP,SAAwBC,OACdpE,EAAgB5C,KAAKiH,MAAMD,GAAoB,IAErDhH,KAAKkH,iBAAiBtE,OAGhBH,EAAczC,KAAK8G,kBAAkBlE,EAAc4D,KACzD/D,EAAYoD,QAAUjD,EAAciD,QACpCpD,EAAY8D,GAAK3D,EAAc2D,OAGzB7D,EAASD,EAAY0E,eAAevE,EAAc0D,SAMxD,OAJA5D,EAAOuC,GAAG,OAAM,cAEM,IAAIzC,EAAkBC,EAAaC,EAAQ1C,KAAK+C,MAAOH,IAK1EgE,EAAAxG,UAAAgH,QAAP,SAAeJ,GACX,OAAOhH,KAAK+G,iBAAiBC,GAASjG,SAGlC6F,EAAAxG,UAAA8G,iBAAR,SAAyBtE,GACrB,QACUyE,EAAeC,KAAKC,UAAU3E,EAAc2D,IAC5CiB,EAAsBF,KAAKC,UAAU3E,EAAcW,WACrDX,EAAciD,UACdjC,QAAQC,IAAI,+BACZD,QAAQC,IAAI,wBAAwBjB,EAAc4D,IAAG,UACrD5C,QAAQC,IAAI,4BAA4BjB,EAAc0D,QAAO,UAC7D1C,QAAQC,IAAI,uBAAuBwD,EAAY,UAC/CzD,QAAQC,IAAI,8BAA8B2D,EAAmB,WAEnE,MAAOnD,MAGLuC,EAAAxG,UAAA6G,MAAR,SAAcQ,OACJC,EAA+B,IAAIrB,EAYzC,OAXAqB,EAAOpB,QAAUmB,EAAUnB,SAAWtG,KAAKoD,eAAekD,QAC1DoB,EAAOlB,IAAMiB,EAAUjB,KAAOxG,KAAKoD,eAAeoD,IAClDkB,EAAOnB,GAAKkB,EAAUlB,IAAMvG,KAAKoD,eAAemD,GAChDmB,EAAO7B,QAAU7F,KAAKoD,eAAeyC,QACrC6B,EAAOjE,MAAQgE,EAAUhE,OAASzD,KAAKoD,eAAeK,MACtDiE,EAAO/D,gBAAkB8D,EAAU9D,iBAAmB3D,KAAKoD,eAAeO,gBAC1E+D,EAAOnE,UAAYkE,EAAUlE,WAAavD,KAAKoD,eAAeG,UAC9DmE,EAAOhD,oBAAsB+C,EAAU/C,qBAAuB1E,KAAKoD,eAAesB,oBAClFgD,EAAOpC,oBAAsBmC,EAAUnC,qBAAuBtF,KAAKoD,eAAekC,oBAClFoC,EAAO/B,0BAA4B8B,EAAU9B,2BAA6B3F,KAAKoD,eAAeuC,0BAC9F+B,EAAOhE,aAAe+D,EAAU/D,cAAgB1D,KAAKoD,eAAeM,aAC7DgE,uBAnEdC,EAAAA,sDARQtB,SAEAuB,EAAAA,0CAeAC,EAAAA,OAAMtD,KAAA,CAACmC,QA6DhBE,EA9EA,GCIMkB,EAAwB,IAAInB,EAAAA,eAAqC,yBAEvE,SAAgBoB,EAAcnF,EAAqCD,OAEzDqF,EAKV,eACUC,EAAkBC,EAAAA,cACxB,GAAuB,MAAnBD,EACA,MAAM,IAAIhI,MAAM,gIAEpB,OAAOgI,EAVeE,GAEtB,OAAO,IAAIvB,EAAQhE,EAAeD,EAAMqF,SAa1BpB,EAHlBwB,EAAA,WAAA,SAAAA,KA0BA,OAnBkBA,EAAAC,QAAd,SAAsBC,GAClB,MAAO,CACHC,SAAUH,EACVI,UAAW,CACP,CACIC,QAASX,EACTY,WAAYJ,GAEhB,CACIK,KAAM,CAACb,EAAuBF,EAAAA,QAC9Ba,QAAS7B,EACT8B,WAAU,MAKZN,EAAAQ,SAAd,WACI,MAAM,IAAI3I,MAAM,wDAxBvB4I,EAAAA,SAAQtE,KAAA,CAAC,CACNiE,UAAW,CAAC,CACRC,QAAS7B,EACTkC,SAAQC,QAuBhBX,EA1BA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject } from 'rxjs';\r\n\r\nexport class BroadcastEventListener<T> extends Subject<T> {\r\n\r\n    constructor(public event: string) {\r\n        super();\r\n        if (event == null || event === '') {\r\n            throw new Error('Failed to create BroadcastEventListener. Argument \\'event\\' can not be empty');\r\n        }\r\n    }\r\n}\r\n","import { Observable, AsyncSubject, ReplaySubject, Subject } from 'rxjs';\r\nimport { SignalRConfiguration } from '../signalr.configuration';\r\nimport { BroadcastEventListener } from '../eventing/broadcast.event.listener';\r\nimport { ConnectionStatus } from '../connection/connection.status';\r\nimport { ISignalRConnection } from '../connection/i.signalr.connection';\r\n\r\nexport interface IListenerCollection {\r\n    [name: string]: BroadcastEventListener<any>;\r\n}\r\n\r\nexport class SignalRConnectionMock implements ISignalRConnection {\r\n    constructor(\r\n        private _mockErrors$: Subject<any>,\r\n        private _mockStatus$: Subject<ConnectionStatus>,\r\n        private _listeners: IListenerCollection) {\r\n    }\r\n\r\n    get errors(): Observable<any> {\r\n        return this._mockErrors$;\r\n    }\r\n\r\n    get status(): Observable<ConnectionStatus> {\r\n        return this._mockStatus$.asObservable();\r\n    }\r\n\r\n    get id(): string {\r\n        return 'xxxxxxxx-xxxx-xxxx-xxxxxxxxx';\r\n    }\r\n\r\n    public stop(): void {\r\n        //\r\n    }\r\n\r\n    public start(): Promise<any> {\r\n        return Promise.resolve(null); // TODO: implement\r\n    }\r\n\r\n    public invoke(method: string, ...parameters: any[]): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    public listen<T>(listener: BroadcastEventListener<T>): void {\r\n        this._listeners[listener.event] = listener;\r\n    }\r\n\r\n    public listenFor<T>(event: string): BroadcastEventListener<T> {\r\n        const listener = new BroadcastEventListener<T>(event);\r\n        this.listen(listener);\r\n        return listener;\r\n    }\r\n\r\n    public listenForRaw(event: string): BroadcastEventListener<any[]> {\r\n        const listener = new BroadcastEventListener<any[]>(event);\r\n        this._listeners[listener.event] = listener;\r\n        return listener;\r\n    }\r\n}\r\n","import { Subject, ReplaySubject } from 'rxjs';\r\nimport { SignalRConnectionMock, IListenerCollection } from './signalr.connection.mock';\r\nimport { ConnectionStatus } from '../connection/connection.status';\r\n\r\nexport class SignalRConnectionMockManager {\r\n\r\n    private _listeners: IListenerCollection;\r\n    private _status$: Subject<ConnectionStatus>;\r\n    private _errors$: Subject<any>;\r\n    private _object: SignalRConnectionMock;\r\n\r\n    constructor() {\r\n        this._errors$ = new Subject<any>();\r\n        this._status$ = new Subject<ConnectionStatus>();\r\n        this._listeners = {};\r\n        this._object = new SignalRConnectionMock(this._errors$, this._status$, this._listeners);\r\n    }\r\n\r\n    get mock(): SignalRConnectionMock {\r\n        return this._object;\r\n    }\r\n\r\n    get errors$(): Subject<any> {\r\n        return this._errors$;\r\n    }\r\n\r\n    get status$(): Subject<ConnectionStatus> {\r\n        return this._status$;\r\n    }\r\n\r\n    get listeners(): IListenerCollection {\r\n        return this._listeners;\r\n    }\r\n}\r\n","export class ConnectionStatus {\r\n\r\n    private static names: string[] = ['connecting', 'connected', 'reconnecting', '', 'disconnected'];\r\n\r\n    private _value: number;\r\n\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n     get name(): string {\r\n        return ConnectionStatus.names[Number(this._value.toString())];\r\n    }\r\n\r\n    constructor(value: number) {\r\n        if (value == null || value < 0) {\r\n            throw new Error('Failed to create ConnectionStatus. Argument \\'name\\' can not be null or empty.');\r\n        }\r\n        this._value = value;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public equals(other: ConnectionStatus): boolean {\r\n        if (other == null) {\r\n            return false;\r\n        }\r\n        return this._value === other.value;\r\n    }\r\n}\r\n","import { ConnectionStatus } from './connection.status';\r\n\r\n// @dynamic\r\nexport class ConnectionStatuses {\r\n\r\n    private static statuses: ConnectionStatus[] =\r\n        [\r\n            new ConnectionStatus(0),\r\n            new ConnectionStatus(1),\r\n            new ConnectionStatus(2),\r\n            new ConnectionStatus(4)\r\n        ];\r\n\r\n    public static get connecting(): ConnectionStatus {\r\n        return ConnectionStatuses.statuses[0];\r\n    }\r\n\r\n    public static get connected(): ConnectionStatus {\r\n        return ConnectionStatuses.statuses[1];\r\n    }\r\n\r\n    public static get reconnecting(): ConnectionStatus {\r\n        return ConnectionStatuses.statuses[2];\r\n    }\r\n\r\n    public static get disconnected(): ConnectionStatus {\r\n        return ConnectionStatuses.statuses[3];\r\n    }\r\n}\r\n","import { ISignalRConnection } from './i.signalr.connection';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { BroadcastEventListener } from '../eventing/broadcast.event.listener';\r\nimport { ConnectionStatus } from './connection.status';\r\nimport { NgZone } from '@angular/core';\r\nimport { SignalRConfiguration } from '../signalr.configuration';\r\nimport { ConnectionTransport } from './connection.transport';\r\n\r\nexport declare type CallbackFn = (...args: any[]) => void;\r\n\r\nexport class SignalRConnection implements ISignalRConnection {\r\n    private _status: Observable<ConnectionStatus>;\r\n    private _errors: Observable<any>;\r\n    private _jConnection: any;\r\n    private _jProxy: any;\r\n    private _zone: NgZone;\r\n    private _configuration: SignalRConfiguration;\r\n    private _listeners: { [eventName: string]: CallbackFn[] };\r\n\r\n    constructor(jConnection: any, jProxy: any, zone: NgZone, configuration: SignalRConfiguration) {\r\n        this._jProxy = jProxy;\r\n        this._jConnection = jConnection;\r\n        this._zone = zone;\r\n        this._errors = this.wireUpErrorsAsObservable();\r\n        this._status = this.wireUpStatusEventsAsObservable();\r\n        this._configuration = configuration;\r\n        this._listeners = {};\r\n    }\r\n\r\n    public get errors(): Observable<any> {\r\n        return this._errors;\r\n    }\r\n\r\n    public get status(): Observable<ConnectionStatus> {\r\n        return this._status;\r\n    }\r\n\r\n    public start(): Promise<ISignalRConnection> {\r\n\r\n        const jTransports = this.convertTransports(this._configuration.transport);\r\n\r\n        const $promise = new Promise<ISignalRConnection>((resolve, reject) => {\r\n            this._jConnection\r\n                .start({\r\n                    jsonp: this._configuration.jsonp,\r\n                    pingInterval: this._configuration.pingInterval,\r\n                    transport: jTransports,\r\n                    withCredentials: this._configuration.withCredentials,\r\n                })\r\n                .done(() => {\r\n                    console.log('Connection established, ID: ' + this._jConnection.id);\r\n                    console.log('Connection established, Transport: ' + this._jConnection.transport.name);\r\n                    resolve(this);\r\n                })\r\n                .fail((error: any) => {\r\n                    console.log('Could not connect');\r\n                    reject('Failed to connect. Error: ' + error.message); // ex: Error during negotiation request.\r\n                });\r\n        });\r\n        return $promise;\r\n    }\r\n\r\n    public stop(): void {\r\n        this._jConnection.stop();\r\n    }\r\n\r\n    public get id(): string {\r\n        return this._jConnection.id;\r\n    }\r\n\r\n    public invoke(method: string, ...parameters: any[]): Promise<any> {\r\n        if (method == null) {\r\n            throw new Error('SignalRConnection: Failed to invoke. Argument \\'method\\' can not be null');\r\n        }\r\n        this.log(`SignalRConnection. Start invoking \\'${method}\\'...`);\r\n\r\n        const $promise = new Promise<any>((resolve, reject) => {\r\n            this._jProxy.invoke(method, ...parameters)\r\n                .done((result: any) => {\r\n                    this.log(`\\'${method}\\' invoked succesfully. Resolving promise...`);\r\n                    resolve(result);\r\n                    this.log(`Promise resolved.`);\r\n                })\r\n                .fail((err: any) => {\r\n                    console.log(`Invoking \\'${method}\\' failed. Rejecting promise...`);\r\n                    reject(err);\r\n                    console.log(`Promise rejected.`);\r\n                });\r\n        });\r\n        return $promise;\r\n    }\r\n\r\n    public listen<T>(listener: BroadcastEventListener<T>): void {\r\n        if (listener == null) {\r\n            throw new Error('Failed to listen. Argument \\'listener\\' can not be null');\r\n        }\r\n\r\n        const callback: CallbackFn = (...args: any[]) => {\r\n            this.run(() => {\r\n                let casted: T = null;\r\n                if (args.length > 0) {\r\n                    casted = args[0] as T;\r\n                }\r\n                this.log('SignalRConnection.proxy.on invoked. Calling listener next() ...');\r\n                listener.next(casted);\r\n                this.log('listener next() called.');\r\n            }, this._configuration.executeEventsInZone);\r\n        };\r\n\r\n        this.setListener(callback, listener);\r\n    }\r\n\r\n    public stopListening<T>(listener: BroadcastEventListener<T>): void {\r\n        if (listener == null) {\r\n            throw new Error('Failed to listen. Argument \\'listener\\' can not be null');\r\n        }\r\n\r\n        this.log(`SignalRConnection: Stopping listening to server event with name ${listener.event}`);\r\n        if (!this._listeners[listener.event]) {\r\n            this._listeners[listener.event] = [];\r\n        }\r\n\r\n        for (const callback of this._listeners[listener.event]) {\r\n            this._jProxy.off(listener.event, callback);\r\n        }\r\n\r\n        this._listeners[listener.event] = [];\r\n    }\r\n\r\n    public listenFor<T>(event: string): BroadcastEventListener<T> {\r\n        if (event == null || event === '') {\r\n            throw new Error('Failed to listen. Argument \\'event\\' can not be empty');\r\n        }\r\n\r\n        const listener = new BroadcastEventListener<T>(event);\r\n\r\n        this.listen(listener);\r\n\r\n        return listener;\r\n    }\r\n\r\n    public listenForRaw(event: string): BroadcastEventListener<any[]> {\r\n        if (event == null || event === '') {\r\n            throw new Error('Failed to listen. Argument \\'event\\' can not be empty');\r\n        }\r\n\r\n        const listener = new BroadcastEventListener<any[]>(event);\r\n\r\n        const callback: CallbackFn = (...args: any[]) => {\r\n            this.run(() => {\r\n                let casted: any[] = [];\r\n                if (args.length > 0) {\r\n                    casted = args;\r\n                }\r\n                this.log('SignalRConnection.proxy.on invoked. Calling listener next() ...');\r\n                listener.next(args);\r\n                this.log('listener next() called.');\r\n            }, this._configuration.executeEventsInZone);\r\n        };\r\n\r\n        this.setListener(callback, listener);\r\n        return listener;\r\n    }\r\n\r\n    private setListener<T>(callback: CallbackFn, listener: BroadcastEventListener<T>) {\r\n        this.log(`SignalRConnection: Starting to listen to server event with name ${listener.event}`);\r\n        this._jProxy.on(listener.event, callback);\r\n\r\n        if (this._listeners[listener.event] == null) {\r\n            this._listeners[listener.event] = [];\r\n        }\r\n\r\n        this._listeners[listener.event].push(callback);\r\n    }\r\n\r\n    private convertTransports(transports: ConnectionTransport | ConnectionTransport[]): any {\r\n        if (transports instanceof Array) {\r\n            return transports.map((t: ConnectionTransport) => t.name);\r\n        }\r\n        return transports.name;\r\n    }\r\n\r\n    private wireUpErrorsAsObservable(): Observable<any> {\r\n        const sError = new Subject<any>();\r\n\r\n        this._jConnection.error((error: any) => {\r\n            this.run(() => sError.next(error), this._configuration.executeErrorsInZone);\r\n        });\r\n        return sError;\r\n    }\r\n\r\n    private wireUpStatusEventsAsObservable(): Observable<ConnectionStatus> {\r\n        const sStatus = new Subject<ConnectionStatus>();\r\n        // aggregate all signalr connection status handlers into 1 observable.\r\n        // handler wire up, for signalr connection status callback.\r\n        this._jConnection.stateChanged((change: any) => {\r\n            this.run(() => sStatus.next(new ConnectionStatus(change.newState)),\r\n                this._configuration.executeStatusChangeInZone);\r\n        });\r\n        return sStatus.asObservable();\r\n    }\r\n\r\n    private onBroadcastEventReceived<T>(listener: BroadcastEventListener<T>, ...args: any[]) {\r\n        this.log('SignalRConnection.proxy.on invoked. Calling listener next() ...');\r\n\r\n        let casted: T = null;\r\n        if (args.length > 0) {\r\n            casted = args[0] as T;\r\n        }\r\n\r\n        this.run(() => {\r\n            listener.next(casted);\r\n        }, this._configuration.executeEventsInZone);\r\n\r\n        this.log('listener next() called.');\r\n    }\r\n\r\n    private log(...args: any[]) {\r\n        if (this._jConnection.logging === false) {\r\n            return;\r\n        }\r\n        console.log(args.join(', '));\r\n    }\r\n\r\n    private run(func: () => void, inZone: boolean) {\r\n        if (inZone) {\r\n            this._zone.run(() => func());\r\n        } else {\r\n            this._zone.runOutsideAngular(() => func());\r\n        }\r\n    }\r\n}\r\n","export class ConnectionTransport {\r\n\r\n    private _name: string;\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    constructor(name: string) {\r\n        if (name == null || name === '') {\r\n            throw new Error('Failed to create ConnectionTransport. Argument \\'name\\' can not be null or empty.');\r\n        }\r\n        this._name = name;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public equals(other: ConnectionTransport): boolean {\r\n        if (other == null) {\r\n            return false;\r\n        }\r\n\r\n        return this._name === other.name;\r\n    }\r\n}\r\n","import { ConnectionTransport } from './connection.transport';\r\n\r\n// @dynamic\r\nexport class ConnectionTransports {\r\n\r\n    private static transports: ConnectionTransport[] =\r\n        [\r\n            new ConnectionTransport('foreverFrame'),\r\n            new ConnectionTransport('longPolling'),\r\n            new ConnectionTransport('serverSentEvents'),\r\n            new ConnectionTransport('webSockets'),\r\n            new ConnectionTransport('auto'),\r\n        ];\r\n\r\n    public static get foreverFrame(): ConnectionTransport {\r\n        return ConnectionTransports.transports[0];\r\n    }\r\n\r\n    public static get longPolling(): ConnectionTransport {\r\n        return ConnectionTransports.transports[1];\r\n    }\r\n\r\n    public static get serverSentEvents(): ConnectionTransport {\r\n        return ConnectionTransports.transports[2];\r\n    }\r\n\r\n    public static get webSockets(): ConnectionTransport {\r\n        return ConnectionTransports.transports[3];\r\n    }\r\n\r\n    public static get auto(): ConnectionTransport {\r\n        return ConnectionTransports.transports[4];\r\n    }\r\n}\r\n","\r\nimport { ConnectionTransports } from './connection/connection.transports';\r\nimport { ConnectionTransport } from './connection/connection.transport';\r\nimport { IConnectionOptions } from './connection/connection.options';\r\n\r\nexport class SignalRConfiguration implements IConnectionOptions {\r\n\r\n    /** connection url to the SignalR service */\r\n    public url: string;\r\n\r\n    /** Allows you to specify query string parameters object when the client connects */\r\n    public qs?: any;\r\n\r\n    /** name of the SignalR service hub to connect to */\r\n    public hubName: string;\r\n\r\n    /** disable/enables client side logging. Defaults to false */\r\n    public logging: boolean;\r\n\r\n    /** Allows jsonp. This flag can be used to suppport CORS on older browsers */\r\n    public jsonp: boolean;\r\n\r\n     /** Allows withCredentials. This flag can be used to suppport CORS */\r\n    public withCredentials: boolean;\r\n\r\n    /** Allows pingInterval */\r\n    public pingInterval?: number;\r\n\r\n    /** Allows you to specify transport. You can specify a fallback order if you wan't to try specific transports in order. By default selects best avaliable transport. */\r\n    public transport: ConnectionTransport | ConnectionTransport[];\r\n\r\n    /** Allows you to run the event callback outside ngZone */\r\n    public executeEventsInZone?: boolean;\r\n\r\n    /** Allows you to run the errors callback outside ngZone */\r\n    public executeErrorsInZone?: boolean;\r\n\r\n    /** Allows you to run the status change in callback outside ngZone */\r\n    public executeStatusChangeInZone?: boolean;\r\n\r\n    constructor() {\r\n       this.hubName = null;\r\n       this.logging = false;\r\n       this.qs  = null;\r\n       this.url = null;\r\n       this.jsonp = false;\r\n       this.withCredentials = false;\r\n       this.transport = ConnectionTransports.auto;\r\n       this.executeEventsInZone = true;\r\n       this.executeErrorsInZone = false;\r\n       this.executeStatusChangeInZone = true;\r\n       this.pingInterval = 300000;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SIGNALR_JCONNECTION_TOKEN = new InjectionToken<any>('SIGNALR_JCONNECTION_TOKEN');\r\n","import { ISignalRConnection } from './connection/i.signalr.connection';\r\nimport { SignalRConfiguration } from './signalr.configuration';\r\nimport { SignalRConnection } from './connection/signalr.connection';\r\nimport { NgZone, Injectable, Inject } from '@angular/core';\r\nimport { IConnectionOptions } from './connection/connection.options';\r\nimport { SIGNALR_JCONNECTION_TOKEN } from './signalr.module';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Injectable()\r\nexport class SignalR {\r\n    private _configuration: SignalRConfiguration;\r\n    private _zone: NgZone;\r\n    private _jHubConnectionFn: any;\r\n\r\n    public constructor(\r\n        configuration: SignalRConfiguration,\r\n        zone: NgZone,\r\n        @Inject(SIGNALR_JCONNECTION_TOKEN) jHubConnectionFn: any /* use type 'any'; Suggested workaround from angular repository: https://github.com/angular/angular/issues/12631 */\r\n    ) {\r\n        this._configuration = configuration;\r\n        this._zone = zone;\r\n        this._jHubConnectionFn = jHubConnectionFn;\r\n    }\r\n\r\n    public createConnection(options?: IConnectionOptions): SignalRConnection {\r\n        const configuration = this.merge(options ? options : {});\r\n\r\n        this.logConfiguration(configuration);\r\n\r\n        // create connection object\r\n        const jConnection = this._jHubConnectionFn(configuration.url);\r\n        jConnection.logging = configuration.logging;\r\n        jConnection.qs = configuration.qs;\r\n\r\n        // create a proxy\r\n        const jProxy = jConnection.createHubProxy(configuration.hubName);\r\n        // !!! important. We need to register at least one function otherwise server callbacks will not work.\r\n        jProxy.on('noOp', () => { /* */ });\r\n\r\n        const hubConnection = new SignalRConnection(jConnection, jProxy, this._zone, configuration);\r\n\r\n        return hubConnection;\r\n    }\r\n\r\n    public connect(options?: IConnectionOptions): Promise<ISignalRConnection> {\r\n        return this.createConnection(options).start();\r\n    }\r\n\r\n    private logConfiguration(configuration: SignalRConfiguration) {\r\n        try {\r\n            const serializedQs = JSON.stringify(configuration.qs);\r\n            const serializedTransport = JSON.stringify(configuration.transport);\r\n            if (configuration.logging) {\r\n                console.log(`Creating connecting with...`);\r\n                console.log(`configuration:[url: '${configuration.url}'] ...`);\r\n                console.log(`configuration:[hubName: '${configuration.hubName}'] ...`);\r\n                console.log(`configuration:[qs: '${serializedQs}'] ...`);\r\n                console.log(`configuration:[transport: '${serializedTransport}'] ...`);\r\n            }\r\n        } catch (err) { /* */ }\r\n    }\r\n\r\n    private merge(overrides: IConnectionOptions): SignalRConfiguration {\r\n        const merged: SignalRConfiguration = new SignalRConfiguration();\r\n        merged.hubName = overrides.hubName || this._configuration.hubName;\r\n        merged.url = overrides.url || this._configuration.url;\r\n        merged.qs = overrides.qs || this._configuration.qs;\r\n        merged.logging = this._configuration.logging;\r\n        merged.jsonp = overrides.jsonp || this._configuration.jsonp;\r\n        merged.withCredentials = overrides.withCredentials || this._configuration.withCredentials;\r\n        merged.transport = overrides.transport || this._configuration.transport;\r\n        merged.executeEventsInZone = overrides.executeEventsInZone || this._configuration.executeEventsInZone;\r\n        merged.executeErrorsInZone = overrides.executeErrorsInZone || this._configuration.executeErrorsInZone;\r\n        merged.executeStatusChangeInZone = overrides.executeStatusChangeInZone || this._configuration.executeStatusChangeInZone;\r\n        merged.pingInterval = overrides.pingInterval || this._configuration.pingInterval;\r\n        return merged;\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders, NgZone, InjectionToken } from '@angular/core';\r\nimport { SignalR } from '../services/signalr';\r\nimport { SignalRConfiguration } from '../services/signalr.configuration';\r\nimport { hubConnection } from 'signalr-no-jquery';\r\n\r\nconst SIGNALR_CONFIGURATION = new InjectionToken<SignalRConfiguration>('SIGNALR_CONFIGURATION');\r\n\r\nexport function createSignalr(configuration: SignalRConfiguration, zone: NgZone) {\r\n\r\n    const jConnectionFn = getJConnectionFn();\r\n\r\n    return new SignalR(configuration, zone, jConnectionFn);\r\n}\r\n\r\nfunction getJConnectionFn(): any {\r\n    const hubConnectionFn = hubConnection;\r\n    if (hubConnectionFn == null) {\r\n        throw new Error('Signalr failed to initialize. Script \\'jquery.signalR.js\\' is missing. Please make sure to include \\'jquery.signalR.js\\' script.');\r\n    }\r\n    return hubConnectionFn;\r\n}\r\n@NgModule({\r\n    providers: [{\r\n        provide: SignalR,\r\n        useValue: SignalR\r\n    }]\r\n})\r\nexport class SignalRModule {\r\n    public static forRoot(getSignalRConfiguration: () => void): ModuleWithProviders {\r\n        return {\r\n            ngModule: SignalRModule,\r\n            providers: [\r\n                {\r\n                    provide: SIGNALR_CONFIGURATION,\r\n                    useFactory: getSignalRConfiguration\r\n                },\r\n                {\r\n                    deps: [SIGNALR_CONFIGURATION, NgZone],\r\n                    provide: SignalR,\r\n                    useFactory: (createSignalr)\r\n                }\r\n            ],\r\n        };\r\n    }\r\n    public static forChild(): ModuleWithProviders {\r\n        throw new Error('forChild method not implemented');\r\n    }\r\n}\r\n"]}